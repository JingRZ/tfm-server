version: '3.0'
services:
  reverse-proxy:
    image: traefik:latest
    # Enables the web UI and tells Traefik to listen to docker
    command: 
      - "--api.insecure=true"
      - "--providers.docker"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--entryPoints.mqtt.address=:1883"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=jingru01@ucm.es"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
      # The HTTPS port
      - "443:443"
      # The MQTT port
      - "1883:1883"
    networks:
      - tfm_network
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - "./traefik/letsencrypt:/letsencrypt" # Mount a volume for Let's Encrypt certificates

  thingsboard:
    #restart: always
    image: "thingsboard/tb-postgres"
    container_name: thingsboard
    ports:
      - "9090:9090"
      #- "1883:1883"
      - "7070:7070" #COAP port
      - "5683-5688:5683-5688/udp"
    environment:
      TB_QUEUE_TYPE: in-memory
    networks:
      - tfm_network
    volumes:
      - ./tb/mytb-data:/data
      - ./tb/mytb-logs:/var/log/thingsboard

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tb_web.rule=Host(`thingsboard.jrzhao.com`)"
      - "traefik.http.routers.tb_web.tls=true"
      - "traefik.http.routers.tb_web.tls.certresolver=letsencrypt"
      - "traefik.http.routers.tb_web.service=tb_web"
      - "traefik.http.services.tb_web.loadbalancer.server.port=9090"

      # TCP router for thingsboard.jrzhao.com:1883
      - "traefik.tcp.routers.tb_mqtt.entrypoints=mqtt"
      - "traefik.tcp.routers.tb_mqtt.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.tb_mqtt.service=tb_mqtt"
      - "traefik.tcp.services.tb_mqtt.loadbalancer.server.port=1883"
      

  mongodb:
    restart: always
    image: "mongo"
    container_name: mongodb
    networks:
      - tfm_network
    ports:
      - "27017:27017"
    volumes:
      - ./mongo/mongodb-data:/data

  graphql:
    build:
      context: ./graphql
    container_name: graphql
    ports:
      - "4000:4000"
    networks:
      - tfm_network
    volumes:
      - ./graphql:/server
    links:
      - mongodb:database
    environment:
      - JWT_SECRET=ibhujgfsr89yasLdfbnjksdf

    labels:
      - "traefik.enable=true"
      # https
      - "traefik.http.routers.graphql.rule=Host(`api.jrzhao.com`) && PathPrefix(`/graphql`)"
      - "traefik.http.routers.graphql.tls=true"
      - "traefik.http.routers.graphql.tls.certresolver=letsencrypt"
      - "traefik.http.routers.graphql.entrypoints=websecure"

      - "traefik.http.routers.pathfind.rule=Host(`api.jrzhao.com`) && PathPrefix(`/pathfind`)"
      - "traefik.http.routers.pathfind.tls=true"
      - "traefik.http.routers.pathfind.tls.certresolver=letsencrypt"
      - "traefik.http.routers.pathfind.entrypoints=websecure"

      - "traefik.http.routers.me.rule=Host(`api.jrzhao.com`) && PathPrefix(`/me`)"
      - "traefik.http.routers.me.tls=true"
      - "traefik.http.routers.me.tls.certresolver=letsencrypt"
      - "traefik.http.routers.me.entrypoints=websecure"

      - "traefik.http.routers.instr.rule=Host(`api.jrzhao.com`) && PathPrefix(`/nextinstr`)"
      - "traefik.http.routers.instr.tls=true"
      - "traefik.http.routers.instr.tls.certresolver=letsencrypt"
      - "traefik.http.routers.instr.entrypoints=websecure"

      - "traefik.http.routers.api.rule=Host(`api.jrzhao.com`) && PathPrefix(`/generate-api-key`)"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
      - "traefik.http.routers.api.entrypoints=websecure"

      - "traefik.http.routers.whereami.rule=Host(`api.jrzhao.com`) && PathPrefix(`/whereami`)"
      - "traefik.http.routers.whereami.tls=true"
      - "traefik.http.routers.whereami.tls.certresolver=letsencrypt"
      - "traefik.http.routers.whereami.entrypoints=websecure"


  imgserver:
    build:
      context: ./imgServer
    container_name: imgServer
    ports:
      - "9092:3000"
    networks:
      - tfm_network
    volumes:
      - ./imgServer:/server
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.imgserver.rule=Host(`api.jrzhao.com`) && PathPrefix(`/img`)"
      - "traefik.http.routers.imgserver.tls=true"
      - "traefik.http.routers.imgserver.tls.certresolver=letsencrypt"
      - "traefik.http.routers.imgserver.entrypoints=websecure" # Ensure it uses HTTPS
      - "traefik.http.services.imgserver.loadbalancer.server.port=3000"



networks:
  tfm_network:
